[
    {
        "offload": false,
        "signature": "at::Tensor at::CPUType::{anonymous}::unfold(const at::Tensor&, int64_t, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::CPUType::{anonymous}::unfold(const at::Tensor&, int64_t, int64_t, int64_t)"
    },
    {
        "offload": true,
        "signature": "at::Tensor at::TypeDefault::flatten(const at::Tensor&, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::transpose(const at::Tensor&, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::transpose(const at::Tensor&, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::flatten(const at::Tensor&, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::flatten(const at::Tensor&, int64_t, int64_t)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::t(const at::Tensor&)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::TypeDefault::contiguous(const at::Tensor&, c10::MemoryFormat)"
    },
    {
        "offload": false,
        "signature": "at::Tensor at::SparseCPUType::{anonymous}::_sparse_mm(const at::Tensor&, const at::Tensor&)"
    }
]